---
name: CI
on: [push,pull_request]
env:
  tf_version: '0.12.24'
  tf_working_dir: 'examples/v0.12'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.14.2'
    - run: go version
    - run: go mod download

    - run: go build -o examples/v0.12/.terraform/plugins/linux_amd64/terraform-provider-graylog ./cmd/terraform-provider-graylog
      env:
        CGO_ENABLED: "0"
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: false
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: false
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.tf_version }}
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: ${{ env.tf_working_dir }}
        tf_actions_comment: false
        
    - name: golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.25.1
        golangci-lint run
    - name: test
      run: |
        bash scripts/codecov_test.sh
        curl -s https://codecov.io/bash > /tmp/codecov.sh
        bash /tmp/codecov.sh

    - name: remove changes
      # Sometimes it is failed to release by goreleaser due to changes of go.sum
      run: git checkout -- .
    - name: fetch tags to release
      run: git fetch --tags
    - name: Unshallow
      run: git fetch --prune --unshallow
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Run GoReleaser (skip publish)
      uses: goreleaser/goreleaser-action@v1
      if: "! startsWith(github.ref, 'refs/tags/')"
      with:
        version: latest
        args: release --rm-dist --snapshot
